<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="mycoffee">
  <head><title></title></head>
  <body>

    <!-- Selection Widgets -->
    
    <metal:view_macro define-macro="view" 
        tal:define="value accessor;">
        <table class="listing">
            <tr>
                <th width="50" i18n:translate="no.">No.</th>
                <th i18n:translate="title_or_id">Title or Id</th>
            </tr>
            <tal:bl tal:repeat="item value">
                <tr tal:define="oddrow repeat/item/odd;"
                    tal:attributes="class python:test(oddrow, 'even', 'odd')">
                    <td tal:define="index repeat/item/index" tal:content="python:index+1"></td>
                    <td tal:content="item"></td>
                </tr>
            </tal:bl>
        </table>
    </metal:view_macro>

    <div metal:define-macro="edit">
        <div metal:use-macro="field_macro | context/widgets/field/macros/edit">
            <div metal:fill-slot="widget_body">
          
            <script type="text/javascript">
                function from2to(name){
                    moveItems(name+".from", name+".to");
                    copyDataForSubmit(name);
                }
                function to2from(name){
                    moveItems(name+".to", name+".from");
                    copyDataForSubmit(name);
                }
                function moveItems(from, to){
                    var src = document.getElementById(from);
                    var tgt = document.getElementById(to);
                    
                    if (src.selectedIndex == -1) selectionError();
                    else{
                        while (src.selectedIndex > -1)
                        if (src.options[src.selectedIndex].selected){
                            temp = new Option(src.options[src.selectedIndex].text,
                            src.options[src.selectedIndex].value);
                            tgt.options[tgt.length] = temp;
                            temp.selected = true;
                            src.options[src.selectedIndex] = null;
                        }
                    }
                }
                function copyDataForSubmit(name){
                    var toSel = document.getElementById(name+".to");
                    var toDataContainer = document.getElementById(name+".toDataContainer");
                    
                    while (toDataContainer.hasChildNodes())
                        toDataContainer.removeChild(toDataContainer.firstChild);
                    for (var i = 0; toSel.options.length > i; i++){
                        var newNode = document.createElement("input");
                        var newAttr = document.createAttribute("name");
                        newAttr.nodeValue = name;
                        newNode.setAttributeNode(newAttr);
                        newAttr = document.createAttribute("type");
                        newAttr.nodeValue = "hidden";
                        newNode.setAttributeNode(newAttr);
                        newAttr = document.createAttribute("value");
                        newAttr.nodeValue = toSel.options[i].value;
                        newNode.setAttributeNode(newAttr);
                        toDataContainer.appendChild(newNode);
                    }
                }
                function selectionError(){
                    alert("Must select something!")
                }
                // move selected item in "to" selection one up
                function moveUp(name)
                  {
                  // shortcuts for selection field
                  var toSel = document.getElementById(name+".to");
                
                  if (toSel.selectedIndex == -1)
                      selectionError();
                  else if (toSel.options[0].selected)
                      alert("Cannot move further up!");
                  else for (var i = 0; toSel.length > i; i++)
                    if (toSel.options[i].selected)
                      {
                      swapFields(toSel.options[i-1], toSel.options[i]);
                      copyDataForSubmit(name);
                      }
                  }
                
                // move selected item in "to" selection one down
                function moveDown(name)
                  {
                    // shortcuts for selection field
                    var toSel = document.getElementById(name+".to");
                
                    if (toSel.selectedIndex == -1) {
                        selectionError();
                    } else if (toSel.options[toSel.length-1].selected) {
                        alert("Cannot move further down!");
                    } else {
                      for (var i = toSel.length-1; i >= 0; i--) {
                        if (toSel.options[i].selected) {
                          swapFields(toSel.options[i+1], toSel.options[i]);
                        }
                      }
                      copyDataForSubmit(name);
                    }
                  }
                  function swapFields(a, b)
                  {
                  // swap text
                  var temp = a.text;
                  a.text = b.text;
                  b.text = temp;
                  // swap value
                  temp = a.value;
                  a.value = b.value;
                  b.value = temp;
                  // swap selection
                  temp = a.selected;
                  a.selected = b.selected;
                  b.selected = temp;
                  }


            </script>
        
            <table tal:define="portal_membership context/portal_membership;
                                listUserById python:portal_membership.listMemberIds();">
                <tr>
                    <td>
                        <select size="6" multiple="multiple"
                            tal:attributes="class string:${fieldName};
                                            name string:${fieldName}.from;
                                            id string:${fieldName}.from;
                                            size widget/size;">
                               <tal:op tal:repeat="item listUserById">
                                <option tal:condition="python:not item in value"
                                    tal:attributes="value item"
                                    tal:content="item" i18n:translate=""/>
                            </tal:op>
                        </select>
                    </td>
                    <td>
                        <input type="button" name="from2toButton" value="&nbsp;"
                            tal:attributes="class string:${fieldName}_from2to;
                                            onClick string:javascript:from2to('${fieldName}')" /><br>
                        <input type="button" name="to2fromButton" value="&nbsp;"
                            tal:attributes="class string:${fieldName}_to2from;
                                            onClick string:javascript:to2from('${fieldName}')" />
                    </td>
                    <td>
                        <select multiple="multiple"
                            tal:attributes="class string:${fieldName};
                                            name string:${fieldName}.to;
                                            id string:${fieldName}.to;
                                            size widget/size;">
                               <tal:op tal:repeat="item value">
                                <option tal:condition="python:item in listUserById" 
                                        tal:attributes="value item"
                                        tal:content="item" i18n:translate=""/>
                            </tal:op>
                        </select>
                        <span tal:attributes="id string:${fieldName}.toDataContainer">
                            <script type="text/javascript" 
                                tal:content="string:copyDataForSubmit('${fieldName}');">
                                // initial copying of user "user.to" --> "toDataContainer"
                            </script>            
                        </span>
                    </td>
                    <td>
                      <input
                          name="upButton" type="button" value="&nbsp;"
                          onclick="javascript:moveUp()"
                          tal:attributes="class string:${fieldName}_moveUp;
                                          onClick string:javascript:moveUp('${fieldName}')"
                          />
                      <br />
                      <input
                          name="downButton" type="button" value="&nbsp;"
                          onclick="javascript:moveDown()"
                          tal:attributes="class string:${fieldName}_moveDown;
                                          onClick string:javascript:moveDown('${fieldName}')"
                          />
                    </td>
                </tr>
           </table>
          </div>
      </div>
    </div>

    <div metal:define-macro="search">
      <div metal:use-macro="context/widgets/lines/macros/edit"></div>
    </div>

    <metal:hidden_macro define-macro="hidden">
        <div id = "DataContainer">
            <input type="hidden"
                    tal:attributes="name fieldName;
                                    value value;"
                    tal:repeat="value accessor"/>
        </div>
    </metal:hidden_macro>
    
  </body>
</html>

